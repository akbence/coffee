# This is a basic workflow that is manually triggered

name: Manual Release workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  print_params:
    name: Print parameters

    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Runs a single command using the runners shell
    - name: Print
      run: |
        echo "github.event.inputs.name ${{ github.event.inputs.name }}"
        echo "github.event.inputs ${{ github.event.inputs }}"
        echo "github.ref: ${{ github.ref }}"
        echo "github.event.ref: ${{ github.event.ref }}"
        echo "github.repository: ${{ github.repository }}"

  release_job:
    name: Maven release
    runs-on: ubuntu-latest
    steps:
      - name: Import GPG key
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY_GITHUB_TECHUSER }}
          GPG_KEY_ID_GITHUB_TECHUSER: ${{ secrets.GPG_KEY_ID_GITHUB_TECHUSER }}
        run: |
          mkdir -p ~/.gnupg/
          echo "$GPG_SIGNING_KEY" | base64 --decode > ~/.gnupg/private.key
          gpg --import ~/.gnupg/private.key
          git config --global user.email "github_techuser@icellmobilsoft.hu"
          git config --global user.name "icellmobilsoft-robot"
          git config --global user.signingkey "$GPG_KEY_ID_GITHUB_TECHUSER"
          git config --global commit.gpgsign true

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY_GITHUB_TECHUSER }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          # config: ${{ secrets.CONFIG }} # ssh_config; optional

      - name: Checkout ${{ github.event.ref }}
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      #- name: Check sign
        #run: mvn -B package gpg:sign -Dgpg.keyname=$GPG_KEY_ID_GITHUB_TECHUSER --file pom.xml

      - name: Configure git credentials
        uses: OleksiyRudenko/gha-git-credentials@v1
        with:
          # <git-user-email@domain.com> (default: github-action@users.noreply.github.com)
          email: github_techuser@icellmobilsoft.hu
          # Git User Name (default: "GitHub Action")
          name: icellmobilsoft-robot
          # GitHub Actor Username (default: github.actor)
          #actor: Github TechUser
          # GitHub Token (default: secrets.GITHUB_TOKEN)
          token: secrets.ROMBOW_GITHUB_COFFEE_PRIVATE

      #- name: mvn -B release:prepare -DdryRun=true
      #  run: mvn -B release:prepare -DdryRun=true

      #- name: mvn -B release:clean
      #  env:
      #    GPG_KEY_ID_GITHUB_TECHUSER: ${{ secrets.GPG_KEY_ID_GITHUB_TECHUSER }}
      #  run: mvn -B release:clean

      - name: mvn -B release:prepare
        env:
          GPG_KEY_ID_GITHUB_TECHUSER: ${{ secrets.GPG_KEY_ID_GITHUB_TECHUSER }}
          # GITHUB_TOKEN: '${{ secrets.ROMBOW_GITHUB_COFFEE_PRIVATE }}'
        run: mvn -B release:prepare -Dgpg.keyname=$GPG_KEY_ID_GITHUB_TECHUSER

      #- name: mvn -B release:perform
      #  env:
      #    GPG_KEY_ID_GITHUB_TECHUSER: ${{ secrets.GPG_KEY_ID_GITHUB_TECHUSER }}
      #    OSSRH_USERNAME: '${{ secrets.OSS_SONATYPE_ORG_USER }}'
      #    OSSRH_PASSWORD: '${{ secrets.OSS_SONATYPE_ORG_PASSWORD }}'
      #  run: mvn -B release:perform -Dgpg.keyname=$GPG_KEY_ID_GITHUB_TECHUSER -s $GITHUB_WORKSPACE/.github/.m2/settings.xml
